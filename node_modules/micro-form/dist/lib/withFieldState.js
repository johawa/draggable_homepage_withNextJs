'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _microstate = require('microstate');

var _errors = require('./errors.js');

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var withFieldState = function withFieldState(_ref) {
  var _ref$name = _ref.name,
      name = _ref$name === undefined ? (0, _errors.err)(_errors.msgs.name) : _ref$name,
      initialValue = _ref.initialValue,
      _ref$valid = _ref.valid,
      valid = _ref$valid === undefined ? true : _ref$valid,
      _ref$validate = _ref.validate,
      validate = _ref$validate === undefined ? function () {
    return true;
  } : _ref$validate;
  return function (Component) {
    return (0, _microstate.connect)(function (state) {
      return {
        name: name,
        value: state[name].value,
        valid: state[name].valid
      };
    }, function (dispatch, state) {
      return {
        updateField: function updateField(value) {
          return dispatch(function (state) {
            return _defineProperty({}, name, {
              name: name,
              value: value,
              valid: state[name].valid,
              validate: state[name].validate
            });
          });
        },
        validateField: function validateField(valid) {
          return dispatch(function (state) {
            return _defineProperty({}, name, {
              name: name,
              value: state[name].value,
              valid: valid ? valid(state[name].value) : state[name].validate(state[name].value),
              validate: state[name].validate
            });
          });
        }
      };
    }, _defineProperty({}, name, {
      value: initialValue !== undefined ? initialValue : '',
      valid: valid !== undefined ? valid : true,
      validate: validate
    }))(Component);
  };
};

exports.default = withFieldState;