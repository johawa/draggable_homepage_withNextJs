{"version":3,"file":"static/webpack/static\\development\\pages\\api\\contact.js.c7f67d8534a7312d5f4c.hot-update.js","sources":["webpack:///./pages/api/contact/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport \"isomorphic-fetch\";\r\nimport { ValidatorForm } from \"react-form-validator-core\";\r\nimport Validator from \"./Validator\";\r\nimport TextareaValidator from \"./TextareaValidator\";\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      submitting: false,\r\n      submitted: false,\r\n      FormValid: false,\r\n      email: \"\",\r\n      message: \"\",\r\n      name: \"\"\r\n    };\r\n  }\r\n\r\n  handleChangeName(event) {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleChangeEmail(event) {\r\n    this.setState({ email: event.target.value });\r\n  }\r\n  handleChangeMessage(event) {\r\n    this.setState({ message: event.target.value });\r\n  }\r\n\r\n  submitForm() {\r\n    if (this.state.FormValid) {\r\n      const { email, message, name } = this.state;\r\n\r\n      fetch(\"/api/contact\", {\r\n        method: \"post\",\r\n        headers: {\r\n          Accept: \"application/json, text/plain, */*\",\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ email, message, name })\r\n      }).then(res => {\r\n        res.status === 200 ? this.setState({ submitted: true }) : \"\";\r\n      });\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n  runFormvalidation = () => {\r\n    const result = this.form.walk(this.form.childs);\r\n    this.setState({ FormValid: result });\r\n    console.log(result); // result will be true or false\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ValidatorForm\r\n          className=\"board-form\"\r\n          ref={r => (this.form = r)}\r\n          onChange={this.runFormvalidation}\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n            this.submitForm();\r\n          }}\r\n        >\r\n          <h2>Contact</h2>\r\n          <div className=\"f fw grid-row--s\">\r\n            <div className=\"mb1 pb05\">\r\n              <label>\r\n                Name :\r\n                <Validator\r\n                  name=\"name\"\r\n                  label=\"Name\"\r\n                  validators={[\r\n                    \"required\",\r\n                    \"minStringLength: 2\",\r\n                    \"maxStringLength: 30\"\r\n                  ]}\r\n                  errorMessages={[\r\n                    \"Please tell me your name\",\r\n                    \"Your name is to Short\",\r\n                    \"Your name is to Long\"\r\n                  ]}\r\n                  value={this.state.name}\r\n                  onChange={this.handleChangeName.bind(this)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"mb1 pb05\">\r\n              <label>\r\n                Email :\r\n                <Validator\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  validators={[\"required\", \"isEmail\"]}\r\n                  errorMessages={[\r\n                    \"Please fill in a Email\",\r\n                    \"This is not a real Email-Address\"\r\n                  ]}\r\n                  value={this.state.email}\r\n                  onChange={this.handleChangeEmail.bind(this)}\r\n                />\r\n              </label>\r\n            </div>\r\n            <div className=\"mb1 pb05\">\r\n              <label>\r\n                Message :\r\n                <TextareaValidator\r\n                  name=\"message\"\r\n                  label=\"Message\"\r\n                  validators={[\r\n                    \"required\",\r\n                    \"minStringLength: 2\",\r\n                    \"maxStringLength: 500\"\r\n                  ]}\r\n                  errorMessages={[\r\n                    \"Please write a Message\",\r\n                    \"Your Message is too short\",\r\n                    \"Your Message is too long\"\r\n                  ]}\r\n                  value={this.state.message}\r\n                  onChange={this.handleChangeMessage.bind(this)}\r\n                />\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            {this.state.FormValid ? (\r\n              <button type=\"submit\">'Send'</button>\r\n            ) : (\r\n              <button type=\"submit\" disabled>\r\n                'Send'\r\n              </button>\r\n            )}\r\n          </div>\r\n        </ValidatorForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA0CA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AA5CA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAFA;AAUA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AANA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAOA;AAAA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAPA;AAUA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AAKA;AAKA;AACA;AAdA;AAkBA;AAAA;AAIA;AACA;AACA;AACA;AAIA;AACA;AATA;AAaA;AAAA;AAIA;AACA;AACA;AAKA;AAKA;AACA;AAdA;AAqBA;AAAA;AAEA;AAAA;AAAA;AAQA;;;;AArIA;AACA;AAuIA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}